services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.production
    ports:
      - "3000:3000"
    environment:
      - RAILS_ENV=production
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - RAILS_MAX_THREADS=5
      - WEB_CONCURRENCY=2
    volumes:
      - ./db:/app/db
      - ./log:/app/log
      - app_tmp:/app/tmp
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Add Redis for caching and background jobs
  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Sidekiq for background jobs
  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile.production
    environment:
      - RAILS_ENV=production
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./db:/app/db
      - ./log:/app/log
      - app_tmp:/app/tmp
    depends_on:
      - redis
    restart: always
    command: bundle exec sidekiq
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  app_tmp:
  redis_data: 