FROM ruby:3.2.8-slim as builder

# Install system dependencies for building
RUN apt-get update -qq && \
    apt-get install -y \
    build-essential \
    nodejs \
    npm \
    sqlite3 \
    libsqlite3-dev \
    git \
    curl \
    libyaml-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy Gemfile and install gems
COPY Gemfile Gemfile.lock ./
RUN bundle config set --local deployment 'true' && \
    bundle config set --local without 'development test' && \
    bundle install --jobs 4 --retry 3

# Copy application code
COPY . .

# Precompile assets for production
RUN RAILS_ENV=production \
    SECRET_KEY_BASE=dummy \
    bundle exec rails assets:precompile

# Production stage
FROM ruby:3.2.8-slim

# Install runtime dependencies only
RUN apt-get update -qq && \
    apt-get install -y \
    sqlite3 \
    libsqlite3-dev \
    curl \
    libyaml-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create app user for security
RUN groupadd -r app && useradd -r -g app app

# Set working directory
WORKDIR /app

# Copy gems from builder stage
COPY --from=builder /usr/local/bundle /usr/local/bundle

# Copy application code and precompiled assets
COPY --from=builder /app /app

# Create necessary directories and set permissions
RUN mkdir -p tmp/pids tmp/cache tmp/sockets log db public/assets && \
    chown -R app:app /app && \
    chmod -R 755 tmp log db public

# Switch to app user
USER app

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Start command
CMD ["bash", "-c", "bundle exec rails db:create RAILS_ENV=production || true && bundle exec rails db:migrate RAILS_ENV=production && bundle exec puma -C config/puma.rb"] 